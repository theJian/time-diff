// Generated by BUCKLESCRIPT VERSION 4.0.0, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var $$String = require("bs-platform/lib/js/string.js");
var Caml_int32 = require("bs-platform/lib/js/caml_int32.js");
var Caml_exceptions = require("bs-platform/lib/js/caml_exceptions.js");
var Caml_builtin_exceptions = require("bs-platform/lib/js/caml_builtin_exceptions.js");

var UnknownUnit = Caml_exceptions.create("TimeDiff-TimeDiff.UnknownUnit");

function yearDiff(range) {
  var s = range[0].getFullYear();
  var e = range[1].getFullYear();
  var includeLastYear = range[0].setFullYear(e) < range[1].getTime();
  var diff = (
    includeLastYear ? e : e - 1.0
  ) - s;
  return /* tuple */[
          /* Years */Block.__(0, [diff | 0]),
          /* tuple */[
            new Date(range[0].setFullYear(s + diff)),
            range[1]
          ]
        ];
}

function monthDiff(range) {
  var match = yearDiff(range);
  var match$1 = match[0];
  if (match$1.tag) {
    throw [
          Caml_builtin_exceptions.match_failure,
          /* tuple */[
            "TimeDiff.re",
            47,
            6
          ]
        ];
  } else {
    var range$1 = match[1];
    var s = range$1[0].getMonth();
    var e = range$1[1].getMonth();
    var includeLastMonth = range$1[0].setMonth(e) < range$1[1].getTime();
    var diff = (
      includeLastMonth ? e : e - 1.0
    ) - s;
    return /* tuple */[
            /* Months */Block.__(1, [Caml_int32.imul(match$1[0], 12) + (diff | 0) | 0]),
            /* tuple */[
              new Date(range$1[0].setMonth(s + diff)),
              range$1[1]
            ]
          ];
  }
}

function weekDiff(range) {
  var s = range[0].getTime();
  var e = range[1].getTime();
  var diff = (e - s | 0) / 604800000 | 0;
  return /* tuple */[
          /* Weeks */Block.__(2, [diff]),
          /* tuple */[
            new Date(s + Caml_int32.imul(diff, 604800000)),
            range[1]
          ]
        ];
}

function dayDiff(range) {
  var s = range[0].getTime();
  var e = range[1].getTime();
  var diff = (e - s | 0) / 86400000 | 0;
  return /* tuple */[
          /* Days */Block.__(3, [diff]),
          /* tuple */[
            new Date(s + Caml_int32.imul(diff, 86400000)),
            range[1]
          ]
        ];
}

function hourDiff(range) {
  var s = range[0].getTime();
  var e = range[1].getTime();
  var diff = (e - s | 0) / 3600000 | 0;
  return /* tuple */[
          /* Hours */Block.__(4, [diff]),
          /* tuple */[
            new Date(s + Caml_int32.imul(diff, 3600000)),
            range[1]
          ]
        ];
}

function minuteDiff(range) {
  var s = range[0].getTime();
  var e = range[1].getTime();
  var diff = (e - s | 0) / 60000 | 0;
  return /* tuple */[
          /* Minutes */Block.__(5, [diff]),
          /* tuple */[
            new Date(s + Caml_int32.imul(diff, 60000)),
            range[1]
          ]
        ];
}

function secondDiff(range) {
  var s = range[0].getTime();
  var e = range[1].getTime();
  var diff = (e - s | 0) / 1000 | 0;
  return /* tuple */[
          /* Seconds */Block.__(6, [diff]),
          /* tuple */[
            new Date(s + Caml_int32.imul(diff, 1000)),
            range[1]
          ]
        ];
}

function millisecondDiff(range) {
  var s = range[0].getTime();
  var e = range[1].getTime();
  return /* tuple */[
          /* Milliseconds */Block.__(7, [e - s | 0]),
          /* tuple */[
            range[1],
            range[1]
          ]
        ];
}

function timeDiff(dateA, dateB, units) {
  var timeA = dateA.getTime();
  var timeB = dateB.getTime();
  var match = timeA > timeB;
  var range = /* record */[/* contents */match ? /* tuple */[
        dateB,
        dateA
      ] : /* tuple */[
        dateA,
        dateB
      ]];
  var diff = /* record */[/* contents : record */[
      /* years */0,
      /* months */0,
      /* weeks */0,
      /* days */0,
      /* hours */0,
      /* minutes */0,
      /* seconds */0,
      /* milliseconds */0
    ]];
  $$String.iter((function (ch) {
          var match;
          var exit = 0;
          if (ch >= 90) {
            if (ch !== 109) {
              if (ch !== 115) {
                exit = 1;
              } else {
                match = secondDiff(range[0]);
              }
            } else {
              match = minuteDiff(range[0]);
            }
          } else if (ch !== 46) {
            if (ch >= 68) {
              switch (ch - 68 | 0) {
                case 0 : 
                    match = dayDiff(range[0]);
                    break;
                case 4 : 
                    match = hourDiff(range[0]);
                    break;
                case 9 : 
                    match = monthDiff(range[0]);
                    break;
                case 19 : 
                    match = weekDiff(range[0]);
                    break;
                case 1 : 
                case 2 : 
                case 3 : 
                case 5 : 
                case 6 : 
                case 7 : 
                case 8 : 
                case 10 : 
                case 11 : 
                case 12 : 
                case 13 : 
                case 14 : 
                case 15 : 
                case 16 : 
                case 17 : 
                case 18 : 
                case 20 : 
                    exit = 1;
                    break;
                case 21 : 
                    match = yearDiff(range[0]);
                    break;
                
              }
            } else {
              exit = 1;
            }
          } else {
            match = millisecondDiff(range[0]);
          }
          if (exit === 1) {
            throw [
                  UnknownUnit,
                  "unknown units: " + $$String.make(1, ch)
                ];
          }
          var unit_ = match[0];
          range[0] = match[1];
          var tmp;
          switch (unit_.tag | 0) {
            case 0 : 
                var init = diff[0];
                tmp = /* record */[
                  /* years */unit_[0],
                  /* months */init[/* months */1],
                  /* weeks */init[/* weeks */2],
                  /* days */init[/* days */3],
                  /* hours */init[/* hours */4],
                  /* minutes */init[/* minutes */5],
                  /* seconds */init[/* seconds */6],
                  /* milliseconds */init[/* milliseconds */7]
                ];
                break;
            case 1 : 
                var init$1 = diff[0];
                tmp = /* record */[
                  /* years */init$1[/* years */0],
                  /* months */unit_[0],
                  /* weeks */init$1[/* weeks */2],
                  /* days */init$1[/* days */3],
                  /* hours */init$1[/* hours */4],
                  /* minutes */init$1[/* minutes */5],
                  /* seconds */init$1[/* seconds */6],
                  /* milliseconds */init$1[/* milliseconds */7]
                ];
                break;
            case 2 : 
                var init$2 = diff[0];
                tmp = /* record */[
                  /* years */init$2[/* years */0],
                  /* months */init$2[/* months */1],
                  /* weeks */unit_[0],
                  /* days */init$2[/* days */3],
                  /* hours */init$2[/* hours */4],
                  /* minutes */init$2[/* minutes */5],
                  /* seconds */init$2[/* seconds */6],
                  /* milliseconds */init$2[/* milliseconds */7]
                ];
                break;
            case 3 : 
                var init$3 = diff[0];
                tmp = /* record */[
                  /* years */init$3[/* years */0],
                  /* months */init$3[/* months */1],
                  /* weeks */init$3[/* weeks */2],
                  /* days */unit_[0],
                  /* hours */init$3[/* hours */4],
                  /* minutes */init$3[/* minutes */5],
                  /* seconds */init$3[/* seconds */6],
                  /* milliseconds */init$3[/* milliseconds */7]
                ];
                break;
            case 4 : 
                var init$4 = diff[0];
                tmp = /* record */[
                  /* years */init$4[/* years */0],
                  /* months */init$4[/* months */1],
                  /* weeks */init$4[/* weeks */2],
                  /* days */init$4[/* days */3],
                  /* hours */unit_[0],
                  /* minutes */init$4[/* minutes */5],
                  /* seconds */init$4[/* seconds */6],
                  /* milliseconds */init$4[/* milliseconds */7]
                ];
                break;
            case 5 : 
                var init$5 = diff[0];
                tmp = /* record */[
                  /* years */init$5[/* years */0],
                  /* months */init$5[/* months */1],
                  /* weeks */init$5[/* weeks */2],
                  /* days */init$5[/* days */3],
                  /* hours */init$5[/* hours */4],
                  /* minutes */unit_[0],
                  /* seconds */init$5[/* seconds */6],
                  /* milliseconds */init$5[/* milliseconds */7]
                ];
                break;
            case 6 : 
                var init$6 = diff[0];
                tmp = /* record */[
                  /* years */init$6[/* years */0],
                  /* months */init$6[/* months */1],
                  /* weeks */init$6[/* weeks */2],
                  /* days */init$6[/* days */3],
                  /* hours */init$6[/* hours */4],
                  /* minutes */init$6[/* minutes */5],
                  /* seconds */unit_[0],
                  /* milliseconds */init$6[/* milliseconds */7]
                ];
                break;
            case 7 : 
                var init$7 = diff[0];
                tmp = /* record */[
                  /* years */init$7[/* years */0],
                  /* months */init$7[/* months */1],
                  /* weeks */init$7[/* weeks */2],
                  /* days */init$7[/* days */3],
                  /* hours */init$7[/* hours */4],
                  /* minutes */init$7[/* minutes */5],
                  /* seconds */init$7[/* seconds */6],
                  /* milliseconds */unit_[0]
                ];
                break;
            
          }
          diff[0] = tmp;
          return /* () */0;
        }), units);
  return diff[0];
}

exports.UnknownUnit = UnknownUnit;
exports.yearDiff = yearDiff;
exports.monthDiff = monthDiff;
exports.weekDiff = weekDiff;
exports.dayDiff = dayDiff;
exports.hourDiff = hourDiff;
exports.minuteDiff = minuteDiff;
exports.secondDiff = secondDiff;
exports.millisecondDiff = millisecondDiff;
exports.timeDiff = timeDiff;
/* No side effect */
